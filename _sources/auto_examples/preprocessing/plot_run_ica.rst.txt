

.. _sphx_glr_auto_examples_preprocessing_plot_run_ica.py:


================================
Compute ICA components on epochs
================================

ICA is fit to MEG raw data.
We assume that the non-stationary EOG artifacts have already been removed.
The sources matching the ECG are automatically found and displayed.

Note that this example does quite a bit of processing, so even on a
fast machine it can take about a minute to complete.



.. code-block:: python


    # Authors: Denis Engemann <denis.engemann@gmail.com>
    #
    # License: BSD (3-clause)

    import mne
    from mne.preprocessing import ICA, create_ecg_epochs
    from mne.datasets import sample

    print(__doc__)


Read and preprocess the data. Preprocessing consists of:

- meg channel selection

- 1 - 30 Hz band-pass IIR filter

- epoching -0.2 to 0.5 seconds with respect to events



.. code-block:: python


    data_path = sample.data_path()
    raw_fname = data_path + '/MEG/sample/sample_audvis_filt-0-40_raw.fif'

    raw = mne.io.read_raw_fif(raw_fname, preload=True)
    raw.pick_types(meg=True, eeg=False, exclude='bads', stim=True)
    raw.filter(1, 30, fir_design='firwin')

    # longer + more epochs for more artifact exposure
    events = mne.find_events(raw, stim_channel='STI 014')
    epochs = mne.Epochs(raw, events, event_id=None, tmin=-0.2, tmax=0.5)


Fit ICA model using the FastICA algorithm, detect and plot components
explaining ECG artifacts.



.. code-block:: python


    ica = ICA(n_components=0.95, method='fastica').fit(epochs)

    ecg_epochs = create_ecg_epochs(raw, tmin=-.5, tmax=.5)
    ecg_inds, scores = ica.find_bads_ecg(ecg_epochs)

    ica.plot_components(ecg_inds)


Plot properties of ECG components:



.. code-block:: python

    ica.plot_properties(epochs, picks=ecg_inds)

**Total running time of the script:** ( 0 minutes  0.000 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_run_ica.py <plot_run_ica.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_run_ica.ipynb <plot_run_ica.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
